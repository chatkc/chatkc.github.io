{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"big {   font-size: 32px; }  <p> <p>The ChatKC Docs</p> <p></p> <p> </p>"},{"location":"bridges/","title":"Bridges","text":"<p>Bridges for the ChatKC Protocol.</p>"},{"location":"bridges/#kcdevs","title":"KCDevs","text":"<p>Discord.js based Discord bridge developed by Platapai1 To join the server, visit Matt's chat here and do <code>^discord</code>.</p> <ul> <li>Closed Source</li> </ul>"},{"location":"bridges/#irckc","title":"ircKC","text":"<p>Node.js based IRC (Internet Relay Chat) developed by janLuna#3621 2</p> <ul> <li>Open Source</li> <li>Source Code</li> </ul> <ol> <li> <p>Platapai's Discord ID: <code>1030414034484342844</code> \u21a9</p> </li> <li> <p>janLuna's Discord ID: <code>849010835225444382</code> \u21a9</p> </li> </ol>"},{"location":"clients/","title":"ChatKC Clients","text":"<p>Currently, there are multiple clients for ChatKC being made for connecting to Matt's server, and in the future, for use with custom servers. Here is a list of the current clients in development</p>"},{"location":"clients/#xkcc","title":"XKCC","text":"<p>C++ client by Breadpudding</p> <p>https://github.com/chatkc/xkcc</p>"},{"location":"clients/#elmkc","title":"ElmKC","text":"<p>Rust GUI client by Breadpudding</p> <ul> <li>ARM should be supported, but has not been succesfully built yet.</li> </ul> <p>https://github.com/cbpudding/elmkc</p>"},{"location":"clients/#uckcc","title":"UCKCC","text":"<p>Electron GUI Client by jdev082</p> <p>https://github.com/jdev082/uckcc</p>"},{"location":"clients/#chatkc","title":"ChatKC","text":"<p>JavaScript CLI Client</p> <ul> <li>No ARM support</li> </ul> <p>https://github.com/zegfarce/chatkc</p>"},{"location":"protocol/","title":"The ChatKC Protocol","text":"<p>ChatKC is a protocol that originated from MattKC's website here and reverse engineered by Breadpudding and janKonku on January 16th, 2023. After playing around with the protocol for hours, MattKC found us hanging out and decided to tweak the protocol a bit to make things easier for us to work with. This document describes the protocol that was created as a result.</p> <p></p> <p></p>"},{"location":"protocol/#connectivity","title":"Connectivity","text":"<p>In order to connect to a ChatKC server, you must establish a secure WebSocket connection to TCP port 2002 and send the \"hello\" event to the server. Once the server sends the initial burst of \"message\" events followed by \"join\" events, bidirectional communication can take place.</p>"},{"location":"protocol/#event-format","title":"Event Format","text":"<p>All events sent to and received from the server are JSON objects containing the <code>type</code> and <code>data</code> attributes. The <code>type</code> attribute will always be a string that describes the information found in the <code>data</code> attribute.</p> <p>In addition to those two fields, events sent to the server are required to have the <code>auth</code> and <code>token</code> attributes. In the reference implementation of the server, <code>auth</code> is always set to the string \"google\" and <code>token</code> is set to your OAuth2 token.</p>"},{"location":"protocol/#event-types","title":"Event Types","text":""},{"location":"protocol/#clientbound-event-types","title":"Clientbound Event Types","text":""},{"location":"protocol/#accepted","title":"accepted","text":"<p>This event means that the server has acknowledged the last message you sent. The <code>data</code> for this type is an object with the <code>message</code> attribute set to the content of your last message.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"accepted\",\n    \"data\": {\n        \"message\": \"Hello world!\"\n    }\n}\n</code></pre>"},{"location":"protocol/#authlevel","title":"authlevel","text":"<p>This event informs the client of their current authentication level. The <code>data</code> for this type is an object with the <code>value</code> attribute set to a number corresponding to your current authentication level.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"authlevel\",\n    \"data\": {\n        \"value\": 0\n    }\n}\n</code></pre>"},{"location":"protocol/#chat","title":"chat","text":"<p>This event informs the client of a new message. The <code>data</code> for this type is an object with the following attributes:</p> Name Type Description <code>auth</code> <code>number</code> Unknown <code>author</code> <code>string</code> The name of the user who created the message <code>author_color</code> <code>string</code> The hexadecimal color code of the user's preferred name color <code>author_id</code> <code>number</code> The identifier of the message author <code>author_level</code> <code>number</code> The authentication level of the message author <code>donate_value</code> <code>string</code> The donation amount given in USD (or an empty string for no donation) <code>id</code> <code>number</code> The identifier of the message itself <code>message</code> <code>string</code> The contents of the message <code>reply</code> <code>number</code> The identifier of the message being replied to (0 if none) <code>time</code> <code>number</code> The timestamp of when the message was created in milliseconds since the Unix epoch <p>Example:</p> <pre><code>{\n    \"type\": \"chat\",\n    \"data\": {\n        \"auth\": 0,\n        \"author\": \"Breadpudding\",\n        \"author_color\": \"B3DCF5\",\n        \"author_id\": 2268,\n        \"author_level\": 0,\n        \"donate_value\": \"2.00\",\n        \"id\": 15225,\n        \"message\": \"Hello world!\",\n        \"reply\": 0,\n        \"time\": 1674090083882\n    }\n}\n</code></pre>"},{"location":"protocol/#delete","title":"delete","text":"<p>This event informs the client that the list of message identifiers given have been deleted from the server. The <code>data</code> for this type is an object with the <code>messages</code> attribute which is an array of message IDs.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"delete\",\n    \"data\": {\n        \"messages\": [\n            15221,\n            15222,\n            15223,\n            15224,\n            15225\n        ]\n    }\n}\n</code></pre>"},{"location":"protocol/#getuserconf","title":"getuserconf","text":"<p>This event informs the client of the user's current configuration. The <code>data</code> for this type is an object with the <code>color</code> and <code>name</code> attributes, where the <code>color</code> attribute is the user's name color in hexadecimal and the <code>name</code> attribute is the current username.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"getuserconf\",\n    \"data\": {\n        \"color\": \"B3DCF5\",\n        \"name\": \"Breadpudding\"\n    }\n}\n</code></pre>"},{"location":"protocol/#join","title":"join","text":"<p>This event informs the client that a member has joined the chat. The <code>data</code> for this type is an object with the <code>name</code> attribute set to the member's name.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"join\",\n    \"data\": {\n        \"name\": \"Breadpudding\"\n    }\n}\n</code></pre>"},{"location":"protocol/#part","title":"part","text":"<p>This event informs the client that a member has left the chat. The <code>data</code> for this type is an object with the <code>name</code> attribute set to the member's name.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"part\",\n    \"data\": {\n        \"name\": \"Breadpudding\"\n    }\n}\n</code></pre>"},{"location":"protocol/#servermsg","title":"servermsg","text":"<p>This event contains a message from the server to the client. This message is only visible to the client that received it and is typically used for error messages. The <code>data</code> for this type is an object with the <code>message</code> attribute.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"servermsg\",\n    \"data\": {\n        \"message\": \"Available commands: commands, forum, forums, geoguessr, help, info, insta, instagram, time, timer, twitter, website, youtube, yt\"\n    }\n}\n</code></pre>"},{"location":"protocol/#status","title":"status","text":"<p>This event informs the client of their current status. The <code>data</code> for this type is an object with the <code>status</code> attribute set to the current status.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"status\",\n    \"data\": {\n        \"status\": \"authenticated\"\n    }\n}\n</code></pre> Status Code <code>authenticated</code> <code>banned</code> <code>nameexists</code> <code>nameinvalid</code> <code>namelength</code> <code>nametimeout</code> <code>rename</code> <code>setuserconf</code> <code>unauthenticated</code>"},{"location":"protocol/#serverbound-event-types","title":"Serverbound Event Types","text":""},{"location":"protocol/#getuserconf_1","title":"getuserconf","text":"<p>This event is used to ask the server for the client's current configuration. There is no <code>data</code> field for this event.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"getuserconf\",\n    \"auth\": \"google\",\n    \"token\": \"...\"\n}\n</code></pre>"},{"location":"protocol/#hello","title":"hello","text":"<p>This event is used to introduce the client to the server. The <code>data</code> for this type is an object with the <code>last_message</code> attribute set to <code>-1</code>. Currently, we do not know why this data is sent.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"hello\",\n    \"data\": {\n        \"last_message\": -1\n    },\n    \"auth\": \"google\",\n    \"token\": \"...\"\n}\n</code></pre>"},{"location":"protocol/#message","title":"message","text":"<p>This event is used to send a message to the server. The <code>data</code> for this type is an object with the following attributes:</p> Name Type Description <code>reply</code> <code>number</code> The ID of the message that this message is a reply of (0 for none) <code>text</code> <code>string</code> The content of the message being sent <p>Example:</p> <pre><code>{\n    \"type\": \"message\",\n    \"data\": {\n        \"text\": \"Hello world!\",\n        \"reply\": 0\n    },\n    \"auth\": \"google\",\n    \"token\": \"...\"\n}\n</code></pre>"},{"location":"protocol/#paypal","title":"paypal","text":"<p>This event is used to donate money to the owner of the server.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"paypal\",\n    \"data\": {\n        // A lot of this isn't safe to put in documentation\n    },\n    \"auth\": \"google\",\n    \"token\": \"...\"\n}\n</code></pre>"},{"location":"protocol/#setuserconf","title":"setuserconf","text":"<p>This event is used to store the client's current configuration on the server. The <code>data</code> for this type is an object containing the <code>color</code> and <code>name</code> attributes.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"setuserconf\",\n    \"data\": {\n        \"name\": \"Breadpudding\",\n        \"color\": \"B3DCF5\"\n    },\n    \"auth\": \"google\",\n    \"token\": \"...\"\n}\n</code></pre>"},{"location":"protocol/#status_1","title":"status","text":"<p>This event is used to request a status update from the server. The <code>data</code> for this type is an empty object.</p> <p>Example:</p> <pre><code>{\n    \"type\": \"status\",\n    \"data\": {},\n    \"auth\": \"google\",\n    \"token\": \"...\"\n}\n</code></pre>"},{"location":"protocol/#commands","title":"Commands","text":"<p>Commands are actions performed by users using messages prefixed with an exclamation point.</p>"},{"location":"protocol/#ban","title":"ban","text":"<p>Usage: <code>!ban &lt;username&gt;</code></p> <p>Summary: Bans a user from the chat</p> <p>Minimum Authentication Level: Unknown</p>"},{"location":"protocol/#help","title":"help","text":"<p>Aliases: commands</p> <p>Usage: <code>!help</code></p> <p>Summary: Lists all of the commands that the user has access to</p> <p>Minimum Authentication Level: <code>0</code></p>"},{"location":"protocol/#info","title":"info","text":"<p>Usage: <code>!info</code></p> <p>Summary: Displays information about the server</p> <p>Minimum Authentication Level: <code>0</code></p>"},{"location":"protocol/#ipban","title":"ipban","text":"<p>Usage: <code>!ipban &lt;address&gt;</code></p> <p>Summary: Blocks a specific IP address from sending messages</p> <p>Minimum Authentication Level: Unknown</p>"},{"location":"protocol/#mod","title":"mod","text":"<p>Usage: <code>!mod &lt;username&gt;</code></p> <p>Summary: Promotes a user to a moderator</p> <p>Minimum Authentication Level: Unknown</p>"},{"location":"protocol/#rm","title":"rm","text":"<p>Usage: <code>!rm &lt;message id&gt;</code></p> <p>Summary: Deletes a message from the chat</p> <p>Minimum Authentication Level: Unknown</p>"},{"location":"protocol/#time","title":"time","text":"<p>Usage: <code>!time</code></p> <p>Summary: Displays the current time on the server</p> <p>Minimum Authentication Level: <code>0</code></p>"},{"location":"protocol/#timer","title":"timer","text":"<p>Usage: <code>!timer &lt;start/check/stop&gt; &lt;name&gt;</code></p> <p>Summary: Creates, checks, or deletes a timer on the server</p> <p>Minimum Authentication Level: <code>0</code></p>"},{"location":"protocol/#unban","title":"unban","text":"<p>Usage: <code>!unban &lt;username&gt;</code></p> <p>Summary: Reverts an existing ban on a user</p> <p>Minimum Authentication Level: Unknown</p>"},{"location":"protocol/#unmod","title":"unmod","text":"<p>Usage: <code>!unmod &lt;username&gt;</code></p> <p>Summary: Demotes a user to an unprivileged member</p> <p>Minimum Authentication Level: Unknown</p>"},{"location":"protocol/#message-formatting","title":"Message Formatting","text":"<p>TODO</p>"},{"location":"protocol/#emoji","title":"Emoji","text":"<p>The emoji system is still very unknown, but it seems that they are pulled from an array or table.</p> <p>https://stream.mattkc.com/chat/emotes/</p>"},{"location":"protocol/#mentions","title":"Mentions","text":"<p>TODO</p>"},{"location":"protocol/#urls","title":"URLs","text":"<p>TODO</p>"},{"location":"protocol/#authentication-levels","title":"Authentication Levels","text":"<p>The following is a list of the currently known authentication levels:</p> Level Meaning <code>0</code> An unprivileged member of the server <code>50</code> Server moderator <code>100</code> The owner of the server"},{"location":"protocol/#permissions","title":"Permissions","text":"Level <code>!ban</code> <code>!ipban</code> <code>!mod</code> <code>!rm</code> <code>!unban</code> <code>!unmod</code> <code>0</code> No No No No No No <code>50</code> Unknown Unknown Unknown Yes Unknown Unknown <code>100</code> Yes Yes Yes Yes Yes Yes"}]}